<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--导入属性配置-->
    <properties resource="generator.properties"></properties>

    <!--指定特定数据库的jdbc驱动jar包的位置-->
    <classPathEntry location="${jdbc.driverLocation}"/>

    <context id="default" targetRuntime="MyBatis3">

        <!-- JavaBean 实现 序列化 接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin">
        </plugin>
        <!-- genenat entity时,生成toString -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <!--&lt;!&ndash; 自定义物理分页  可生成支持Mysql数据的limit  不支持Oracle &ndash;&gt;
        <plugin type="org.mybatis.generator.plugins.page.PaginationPlugin" />-->
        <!-- 开启支持内存分页   可生成 支持内存分布的方法及参数
                <plugin type="org.mybatis.generator.plugins.RowBoundsPlugin" />
                -->
        <!-- generate entity时，生成hashcode和equals方法
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
		 -->
        <!-- 此处是将Example改名为Criteria 当然 想改成什么都行~    -->
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin">
            <property name="searchString" value="Example$" />
            <!-- 替换后
            <property name="replaceString" value="Criteria" />
             -->
            <property name="replaceString" value="Query" />
        </plugin>
        <!--&lt;!&ndash; 此处是将UserMapper.xml改名为UserDao.xml 当然 想改成什么都行~ &ndash;&gt;
        <plugin type="org.mybatis.generator.plugins.rename.RenameSqlMapperPlugin">
            <property name="searchString" value="Mapper$" />
            <property name="replaceString" value="Dao" />
        </plugin>
        &lt;!&ndash; 此处是将UserMapper改名为UserDao 接口 当然 想改成什么都行~  &ndash;&gt;
        <plugin type="org.mybatis.generator.plugins.rename.RenameJavaMapperPlugin">
            <property name="searchString" value="Mapper$" />
            <property name="replaceString" value="Dao" />
        </plugin>-->


        <!-- optional，旨在创建class时，对注释进行控制 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--jdbc的数据库连接 -->
        <jdbcConnection
                driverClass="${jdbc.driverClass}"
                connectionURL="${jdbc.connectionURL}"
                userId="${jdbc.userId}"
                password="${jdbc.password}">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和
                    NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
        <javaModelGenerator targetPackage="top.lt.core.bean"
                            targetProject="src/main/java">
            <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否对model添加 构造函数 -->
            <property name="constructorBased" value="true"/>
            <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
        <sqlMapGenerator targetPackage="top.lt.core.mapper"
                         targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
        </sqlMapGenerator>
        <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
        <javaClientGenerator targetPackage="top.lt.core.dao"
                             targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>


        <!--<table tableName="bbs_buyer" domainObjectName="user.Buyer"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>-->
        <!-- 指定数据库表 -->
        <!-- 用户模块表  -->
        <table tableName="bbs_buyer" domainObjectName="user.Buyer"/>
        <!-- 商品模块表 -->
        <table tableName="bbs_product" domainObjectName="product.Product">
            <!-- 商品介绍 大字段映射 -->
            <columnOverride column="description" javaType="String" jdbcType="VARCHAR" />
            <!-- 包装清单 大字段映射 -->
            <columnOverride column="package_list" javaType="String" jdbcType="VARCHAR" />
            <!-- 商品图片 大字段映射 -->
            <columnOverride column="img_url" javaType="String" jdbcType="VARCHAR" />
        </table>
        <table tableName="bbs_brand" domainObjectName="product.Brand"/>
        <table tableName="bbs_Color" domainObjectName="product.Color"/>
        <table tableName="bbs_sku" domainObjectName="product.Sku"/>
        <!-- 订单模块表 -->
        <table tableName="bbs_order" domainObjectName="order.Order">
            <!-- 支付方式 0:到付 1:在线 2:邮局 3:公司转帐 -->
            <columnOverride column="payment_way" javaType="Integer"/>
            <!-- 货到付款方式.1现金,2POS刷卡 -->
            <columnOverride column="payment_cash" javaType="Integer" />
            <!-- 送货时间 -->
            <columnOverride column="delivery" javaType="Integer"/>
            <!-- 支付状态 :0到付1待付款,2已付款,3待退款,4退款成功,5退款失败 -->
            <columnOverride column="is_paiy" javaType="Integer"/>
            <!-- 订单状态 0:提交订单 1:仓库配货 2:商品出库 3:等待收货 4:完成 5待退货 6已退货 -->
            <columnOverride column="state" javaType="Integer"/>
            <!-- 订单状态 默认Boolean -->
            <columnOverride column="order_state" javaType="Integer"/>
        </table>
        <table tableName="bbs_detail" domainObjectName="order.Detail"/>


    </context>
</generatorConfiguration>